var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, ContentChild } from '@angular/core';
import { ComponentBase, applyMixins, setValue } from '@syncfusion/ej2-ng-base';
import { Tab } from '@syncfusion/ej2-navigations';
import { TabItemsDirective } from './items.directive';
export var inputs = ['animation', 'cssClass', 'enablePersistence', 'enableRtl', 'headerPlacement', 'height', 'heightAdjustMode', 'items', 'locale', 'overflowMode', 'selectedItem', 'showCloseButton', 'width'];
export var outputs = ['added', 'adding', 'created', 'destroyed', 'removed', 'removing', 'selected', 'selecting'];
export var twoWays = [''];
/**
 * Represents the EJ2 Angular Tab Component.
 * ```html
 * <ej-tab overflowMode= 'Popup'></ej-tab>
 * ```
 */
var TabComponent = /** @class */ (function (_super) {
    __extends(TabComponent, _super);
    function TabComponent(ngEle, viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.ngEle = ngEle;
        _this.viewContainerRef = viewContainerRef;
        _this.tags = ['items'];
        _this.element = _this.ngEle.nativeElement;
        _this.injectedModules = _this.injectedModules || [];
        for (var i = 2; i < arguments.length; i++) {
            var injectedObj = arguments[i];
            if (injectedObj) {
                _this.injectedModules.push(injectedObj);
            }
        }
        _this.registerEvents(outputs);
        _this.addTwoWay.call(_this, twoWays);
        setValue('currentInstance', _this, _this.viewContainerRef);
        return _this;
    }
    TabComponent.prototype.ngOnInit = function () {
    };
    TabComponent.prototype.ngAfterViewInit = function () {
    };
    TabComponent.prototype.ngOnDestroy = function () {
    };
    TabComponent.prototype.ngAfterContentChecked = function () {
    };
    TabComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ej-tab',
                    inputs: inputs,
                    outputs: outputs,
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    queries: {
                        childItems: new ContentChild(TabItemsDirective)
                    }
                },] },
    ];
    /** @nocollapse */
    TabComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: ViewContainerRef, },
    ]; };
    return TabComponent;
}(Tab));
export { TabComponent };
applyMixins(TabComponent, [ComponentBase]);
//# sourceMappingURL=tab.component.js.map