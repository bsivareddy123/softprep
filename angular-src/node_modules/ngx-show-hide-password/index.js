import { Component, ElementRef, Input, NgModule, Renderer2 } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Add a split input button to password or text input. Toggles input type between "text" and "password".
 *
 * \@example
 * <show-hide-password size="sm|lg">
 * <input type="password" name=... />
 * </show-hide-password>
 */
var ShowHidePasswordComponent = /** @class */ (function () {
    function ShowHidePasswordComponent(elem, renderer) {
        this.elem = elem;
        this.renderer = renderer;
    }
    /**
     * init component
     */
    /**
     * init component
     * @return {?}
     */
    ShowHidePasswordComponent.prototype.ngOnInit = /**
     * init component
     * @return {?}
     */
    function () {
        this.input = this.elem.nativeElement.querySelector('input');
        if (this.input) {
            this.renderer.addClass(this.elem.nativeElement, 'input-group');
            if (this.size === 'sm') {
                this.renderer.addClass(this.elem.nativeElement, 'input-group-sm');
            }
            else if (this.size === 'lg') {
                this.renderer.addClass(this.elem.nativeElement, 'input-group-lg');
            }
            this.isHidden = this.input.type === 'password';
            this.renderer.addClass(this.input, 'form-control'); // just to be sure
        }
        else {
            throw new Error("No input element found. Please read the docs!");
        }
    };
    /**
     * toggles type of input (text|password)
     * @param {?} $event not used
     * @return {?}
     */
    ShowHidePasswordComponent.prototype.toggleShow = /**
     * toggles type of input (text|password)
     * @param {?} $event not used
     * @return {?}
     */
    function ($event) {
        this.isHidden = !this.isHidden;
        this.renderer.setAttribute(this.input, 'type', this.isHidden ? 'password' : 'text');
    };
    ShowHidePasswordComponent.decorators = [
        { type: Component, args: [{
                    selector: 'show-hide-password',
                    template: "\n    <ng-content></ng-content>\n    <div class=\"input-group-append\">\n      <button *ngIf=\"icon\" class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"toggleShow($event)\"\n        [attr.label]=\"isHidden ? 'Show password' : 'Hide password'\" [ngSwitch]=\"icon\">\n        <span *ngSwitchCase=\"'entypo'\" class=\"icon\"\n          [ngClass]=\"{'icon-eye-with-line': !isHidden, 'icon-eye': isHidden}\"\n          [style.font-size]=\"size === 'lg' ? '1.5rem' : ''\"></span>\n        <i class=\"fa fa-fw\" [ngClass]=\"{'fa-eye-slash': !isHidden, 'fa-eye': isHidden, 'fa-lg': size === 'lg'}\"\n          *ngSwitchDefault></i>\n      </button>\n      <div *ngIf=\"!icon\" class=\"input-group-text\">\n        <input type=\"checkbox\" class=\"\" (click)=\"toggleShow($event)\"\n          [attr.label]=\"isHidden ? 'Show password' : 'Hide password'\">\n      </div>\n    </div>\n  "
                },] },
    ];
    /** @nocollapse */
    ShowHidePasswordComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
    ]; };
    ShowHidePasswordComponent.propDecorators = {
        "size": [{ type: Input },],
        "icon": [{ type: Input },],
    };
    return ShowHidePasswordComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var ShowHidePasswordModule = /** @class */ (function () {
    function ShowHidePasswordModule() {
    }
    /**
     * @return {?}
     */
    ShowHidePasswordModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: ShowHidePasswordModule
        };
    };
    ShowHidePasswordModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule, FormsModule],
                    exports: [ShowHidePasswordComponent],
                    declarations: [ShowHidePasswordComponent]
                },] },
    ];
    /** @nocollapse */
    ShowHidePasswordModule.ctorParameters = function () { return []; };
    return ShowHidePasswordModule;
}());

export { ShowHidePasswordModule, ShowHidePasswordComponent };
